Prometheus and Grafana setup using helm
=======================================
## To make sure helm should be installed (3.8.2 is best compatable)

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
sudo chmod 700 get_helm.sh
sudo ./get_helm.sh
curl -L https://git.io/get_helm.sh | bash -s -- --version v3.8.2

## configure metrics service to get CPU and memory status 
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
kubectl get deployment metrics-server -n kube-system


## Add the helm charts 
helm repo add stable https://charts.helm.sh/stable

## prometheus helm repo addtion
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm search repo prometheus-community

## Create an namespace for deploying prometheus resource
kubectl create namespace prometheus

## Install kube-prometheus-stack
helm install stable prometheus-community/kube-prometheus-stack -n prometheus
kubectl get svc -n prometheus

## expose load balencer service for our Prometheus and grafana
kubectl edit svc stable-kube-prometheus-sta-prometheus -n prometheus
change type from ClusterIP => LoadBalencer

kubectl edit svc stable-grafana -n prometheus
change type from ClusterIP => LoadBalencer

check the services now 
kubectl get svc -n prometheus

check the deployments now 
kubectl get all -n prometheus



## Make sure to expose nodeport for accessing outside 
kubectl get svc  -n prometheus -o yaml | sed 's/type: ClusterIP/type: NodePort/' | kubectl replace -f - 


## Accces prometheus using IP:nodeport in browser

## Access grafana in broswser using below credentials 
Username: admin
Password: prom-operator

## Expose predefined monitoring dashboard 
12740
3119
6417
4151



